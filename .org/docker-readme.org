#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+OPTIONS: auto-id:t
#+TITLE: docker-readme
#+DATE: <2017-03-03 Fri>
#+AUTHOR: Julien Chastang
#+EMAIL: chastang@ucar.edu
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.2 (Org mode 9.0.5)

#+PROPERTY: header-args :noweb yes :tangle no

* Org Setup :noexport:
  :PROPERTIES:
  :CUSTOM_ID: h:ECAA0F5F
  :END:

#+BEGIN_SRC emacs-lisp :results silent :exports none
  (setq org-confirm-babel-evaluate nil)
  (setq org-export-babel-evaluate nil)
#+END_SRC

* Docker Installation
  :PROPERTIES:
  :CUSTOM_ID: h:BA11A408
  :END:

The ~xsede-jetstream~ project is heavily dependent on Docker.  Herein are some instructions to help you get going with Docker.

** Linux VM or Bare Metal Linux
   :PROPERTIES:
   :CUSTOM_ID: h:FF95E7EC
   :END:

Always think before typing the following commands as ~root~ user!

*** System Maintenance
    :PROPERTIES:
    :CUSTOM_ID: h:AE788331
    :END:

Do the usual maintenance via ~apt-get~ or ~yum~. Also install ~git~ for good measure.

**** apt-get
     :PROPERTIES:
     :CUSTOM_ID: h:B7D88FA4
     :END:

#+BEGIN_SRC sh :eval no
  apt-get update && apt-get -y upgrade && apt-get -y dist-upgrade && \
      apt-get -y install git
#+END_SRC

**** yum
     :PROPERTIES:
     :CUSTOM_ID: h:C9632B6B
     :END:

#+BEGIN_SRC sh :eval no
 yum -y update && yum -y install git
#+END_SRC

*** Install Docker
    :PROPERTIES:
    :CUSTOM_ID: h:786799C4
    :END:

Again, think before you type.

#+BEGIN_SRC sh :eval no
  curl -sSL get.docker.com | sh
  usermod -aG docker <username>
#+END_SRC

*** Install docker-compose
    :PROPERTIES:
    :CUSTOM_ID: h:02EF6BAD
    :END:

#+BEGIN_SRC org :noweb-ref dcompose-version :exports none
 1.11.2
#+END_SRC

#+BEGIN_SRC sh :eval no :noweb yes
  curl -L https://github.com/docker/compose/releases/download/<<dcompose-version>>/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose

  chmod +x /usr/local/bin/docker-compose
#+END_SRC

*** Start Docker Daemon
    :PROPERTIES:
    :CUSTOM_ID: h:B6F088A3
    :END:

As ~root~ user, make sure Docker is available as a daemon. You can issue one of the following commands depending on your flavor of Linux.

#+BEGIN_SRC sh :eval no
  service docker start
#+END_SRC

or 

#+BEGIN_SRC sh :eval no
  systemctl enable docker.service
  systemctl start docker.service
#+END_SRC

*** Reboot
    :PROPERTIES:
    :CUSTOM_ID: h:6D94F8D5
    :END:

Now reboot the machine:

#+BEGIN_SRC sh :eval no
  reboot now
#+END_SRC

Log back into Linux machine or VM.

*** Docker Hello World
    :PROPERTIES:
    :CUSTOM_ID: h:F3633FE6
    :END:

Run this container to make sure the docker install has gone smoothly:

#+BEGIN_SRC sh :eval no
  docker run hello-world
#+END_SRC

** Other Environments (e.g., macOS, Windows)
   :PROPERTIES:
   :CUSTOM_ID: h:D1009153
   :END:

For other environments, see [[https://docs.docker.com/engine/installation/][the official docker installation documentation]].
